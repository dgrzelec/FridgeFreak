<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:aggregators="http://www.mulesoft.org/schema/mule/aggregators"
	xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/aggregators http://www.mulesoft.org/schema/mule/aggregators/current/mule-aggregators.xsd">
	<flow name="fridgefreak-get" doc:id="3d6678fc-68f8-423f-8261-df9bd8150480" >
		<ee:transform doc:name="Set query params payload" doc:id="1274b214-8078-4f52-bf24-d6b5709dd941" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
    output application/json
    var name = attributes.queryParams.name
	var storage = attributes.queryParams.storage_space
	var category = attributes.queryParams.category
	var quantity = attributes.queryParams.quantity
    ---
    {
    empty_name: if (name != null) 0 else 1,
    name_q: name, //(if (name != null) " AND name = '" ++ name ++ "'" else ""),
    empty_storage: if (storage != null) 0 else 1,
    storage_q: storage, //(if (storage != null) " AND storage_space = '" ++ storage ++ "'" else ""),
    empty_category: if (category != null) 0 else 1,
    category_q: category, //(if (category != null) " AND category = '" ++ category ++ "'" else ""),
    empty_quantity: if (quantity != null) 0 else 1,
    quantity_q: quantity //(if (quantity != null) " AND quantity = " ++ quantity else "")
    }]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<db:select doc:name="Get queried products" doc:id="727da8ab-b732-4468-896a-65870bba97df" config-ref="clever_cloud_config" >
			<db:sql ><![CDATA[SELECT * FROM products 
	WHERE 1=1
	AND (1 = :empty_name OR name = :name_q)
	AND (1 = :empty_storage OR storage_space = :storage_q)
	AND (1 = :empty_category OR category = :category_q)
	AND (1 = :empty_quantity OR quantity = :quantity_q)]]></db:sql>
			<db:input-parameters ><![CDATA[#[output application/java
---
{
	name_q: payload.name_q,
	empty_category: payload.empty_category,
	storage_q: payload.storage_q,
	empty_name: payload.empty_name,
	category_q: payload.category_q,
	empty_quantity: payload.empty_quantity,
	empty_storage: payload.empty_storage,
	quantity_q: payload.quantity_q
}]]]></db:input-parameters>
		</db:select>
		<choice doc:name="Filter by expiry date" doc:id="96845e83-7574-4f2f-926a-3df1729a272d" >
			<when expression="#[vars.expire2date != null]" >
				<ee:transform doc:name="return filtered json" doc:id="e5f7eed9-4f1a-414e-9875-38177c6b6f35" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var ret_array = filter(payload, (product, idx) -> 
				(product.expire_by < vars.expire2date))
---
{
	result_count: sizeOf(ret_array),
	products: ret_array
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise >
				<ee:transform doc:name="return json" doc:id="0221ea53-d941-4db2-b247-550163a4591c" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json

---
{
	result_count: sizeOf(payload),
	products: payload
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
	</flow>
	<flow name="fridgefreak-get_by_id" doc:id="7087ec80-5a65-4130-8a7b-787e94db4072" >
		<db:select doc:name="Select product with {id} " doc:id="541f8fd6-c28b-4b6d-aab7-584a897e4ccc" config-ref="clever_cloud_config" >
			<db:sql ><![CDATA[SELECT * FROM products WHERE id = :id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	id: attributes.uriParams.'id'
}]]]></db:input-parameters>
		</db:select>
		<choice doc:name="Choice" doc:id="699c5efe-b90f-4ebe-8a4e-5202d20d4a29" >
			<when expression="#[isEmpty(payload)]" >
				<raise-error doc:name="not found" doc:id="2da681b3-de8d-4be4-9e58-530313490508" type="PRODUCT:NOT_FOUND" description="Product with specified ID not found in database" />
			</when>
			<otherwise >
				<ee:transform doc:name="Transform Message" doc:id="f824dac9-2d43-4b43-84bd-f4a8346b9f99" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload[0]]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
	</flow>
	<flow name="fridgefreak-delete" doc:id="32c71362-4644-4f01-bb13-9cf340d9a814" >
		<ee:transform doc:name="Set query params payload" doc:id="c592c5dc-7bb1-4c0a-9c19-35b0f0e55db9" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
    output application/json
    var name = payload.name
	var storage = payload.storage_space
	var category = payload.category
	var expiry = payload.expire_by
    ---
    {
    empty_name: if (name != null) 0 else 1,
    name_q: name, //(if (name != null) " AND name = '" ++ name ++ "'" else ""),
    empty_storage: if (storage != null) 0 else 1,
    storage_q: storage, //(if (storage != null) " AND storage_space = '" ++ storage ++ "'" else ""),
    empty_category: if (category != null) 0 else 1,
    category_q: category, //(if (category != null) " AND category = '" ++ category ++ "'" else ""),
    empty_expiry: if (expiry != null) 0 else 1,
    expiry_q: expiry //(if (quantity != null) " AND quantity = " ++ quantity else "")
    }]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<db:select doc:name="Get queried products" doc:id="ededde02-4dea-445c-996b-9a6fd2996bc4" config-ref="clever_cloud_config" >
			<db:sql ><![CDATA[SELECT * FROM products 
	WHERE (1 = :empty_name OR name = :name_q)
	AND (1 = :empty_storage OR storage_space = :storage_q)
	AND (1 = :empty_category OR category = :category_q)
	AND (1 = :empty_expiry OR expire_by = :expiry_q)]]></db:sql>
			<db:input-parameters ><![CDATA[#[output application/java
---
{
	name_q: payload.name_q,
	empty_category: payload.empty_category,
	storage_q: payload.storage_q,
	empty_name: payload.empty_name,
	category_q: payload.category_q,
	empty_expiry: payload.empty_expiry,
	empty_storage: payload.empty_storage,
	expiry_q: payload.expiry_q
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="JSON result object with IDs" doc:id="96f35ff0-12a9-4f77-a996-a8789a80c952" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	count: sizeOf(payload),
	id_array: map(payload, (product, idx) -> product.id),
	products: payload
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<choice doc:name="check if only one product meets criteria" doc:id="a8a8ea0e-699b-42e0-990d-6de058b4a1f9" >
			<when expression="#[payload.count != 1]" >
				<raise-error doc:name="REQUEST:AMBIGUIOUS" doc:id="e1a4371b-db5b-4022-9b42-0bc6897c0b55" type="REQUEST:AMBIGUIOUS" description="More than 1 (or 0) products meets criteria for deletion." />
			</when>
			<otherwise >
				<set-variable value="#[payload.products[0]]" doc:name="Set Product" doc:id="03b65cae-920a-45e1-be49-454c98763dd6" variableName="product" />
			</otherwise>
		</choice>
		<choice doc:name="Delete or set quantity to zero" doc:id="696baf76-35c5-4d58-aded-6ddafd25c36f" >
			<when expression="#[vars.in_database]" >
				<db:delete doc:name="Delete product" doc:id="b77b2962-546c-4254-8590-0fe99df8ee4b" config-ref="clever_cloud_config" >
					<db:sql ><![CDATA[DELETE FROM products WHERE id = :id]]></db:sql>
					<db:input-parameters ><![CDATA[#[{
	id: vars.product.id
}]]]></db:input-parameters>
				</db:delete>
				<set-payload value='#[output application/json&#10;---&#10;{&#10; message: "Product with ID = " ++ vars.product.id as String ++ " deleted.",&#10; product: vars.product&#10;}]' doc:name="Set return json" doc:id="909dd516-7536-41ca-be6a-54acbd22511e" />
			</when>
			<otherwise >
				<db:update doc:name="Quantity -&gt; " doc:id="cc35cf8d-2c27-4ebe-8a4f-55bbe0dda27f" config-ref="clever_cloud_config" >
					<db:sql ><![CDATA[UPDATE products
SET quantity = 0
WHERE id = :id]]></db:sql>
					<db:input-parameters ><![CDATA[#[{
	id: vars.product.id
}]]]></db:input-parameters>
				</db:update>
				<set-payload value='#[output application/json&#10;---&#10;{&#10; message: "Quantity of Product with ID = " ++ vars.product.id as String ++ " set to zero.",&#10; product: vars.product&#10;}]' doc:name="Set return json" doc:id="6d8ec8f2-6f26-48a7-b15f-05cfff2c19fc" />
			</otherwise>
		</choice>
	</flow>
	<flow name="fridgefreak-delete_by_id" doc:id="7f721c8d-91aa-402c-862d-be485ec1c000" >
		<db:delete doc:name="Delete product" doc:id="710a0b3f-ea05-414e-8742-775828ac0f4a" config-ref="clever_cloud_config" >
			<db:sql ><![CDATA[DELETE FROM products WHERE id = :id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	id: vars.id
}]]]></db:input-parameters>
		</db:delete>
		<choice doc:name="Choice" doc:id="fd33b8e8-4ed2-4463-9fbb-e08d673da0ec" >
			<when expression="#[payload == 0]" >
				<raise-error doc:name="not found" doc:id="b2971c4f-815d-45b2-bd2b-7a40294c88ac" type="PRODUCT:NOT_FOUND" description="Product with specified ID not found in database" />
			</when>
			<otherwise >
				<ee:transform doc:name="Transform Message" doc:id="b64bb736-0a04-4a3e-963f-c12073e45414" >
					<ee:message >
						<ee:set-payload ><![CDATA[output application/json
---
{
	message: "Product with ID = " ++ vars.id as String ++ " deleted."
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
	</flow>
	<flow name="fridgefreak-post_json" doc:id="0cfb778b-96ac-4778-a4c2-f5ba511863de" >
		<foreach doc:name="For Each" doc:id="62fca4a5-5169-464f-b89b-dbc65e32daa7" collection="#[payload]" >
			<db:insert doc:name="Insert" doc:id="480aebd3-7ec4-4424-9947-09a28a208132" config-ref="clever_cloud_config" >
				<db:sql ><![CDATA[INSERT INTO products (name, quantity, category, storage_space, expire_by)
      VALUES (:name, :quantity, :category, :storage_space, :expire_by)]]></db:sql>
				<db:input-parameters ><![CDATA[#[{
	name: payload.name,
	quantity: payload.quantity,
	category: payload.category,
	storage_space: payload.storage_space,
	expire_by: payload.expire_by,
}]]]></db:input-parameters>
			</db:insert>
		</foreach>
		<ee:transform doc:name="Return JSON" doc:id="16ab1560-e3a3-420a-976c-f2c47d59d7a7" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var prod_num = sizeOf(payload)
---
{
	products_added: prod_num,
	message: "Successfully added products to storage."
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="fridgefreak-post_xml" doc:id="84295a1b-c9bf-4578-9f9f-3a1a6bc6edec" >
		<ee:transform doc:name="XML to JSON" doc:id="f5f5bdf8-a9fe-4abe-a122-072b281d10a6" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload.Product]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<db:insert doc:name="Insert" doc:id="777df4fa-9062-4891-afdd-d7d0d00a1b11" config-ref="clever_cloud_config" >
			<db:sql ><![CDATA[INSERT INTO products (name, quantity, category, storage_space, expire_by)
      VALUES (:name, :quantity, :category, :storage_space, :expire_by)]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	name: payload.name,
	quantity: payload.quantity,
	category: payload.category,
	storage_space: payload.storage_space,
	expire_by: payload.expire_by,
}]]]></db:input-parameters>
		</db:insert>
		<set-payload value='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10; message: "Successfully added one product to storage."&#10;}]' doc:name="Return message" doc:id="50d432b1-d7e7-4432-a504-77eb3e72ee86" />
	</flow>
	<flow name="fridgefreak-put_id" doc:id="890fe4fd-58a1-43ac-89e2-cecf3b1addd3" >
		<db:update doc:name="Update product" doc:id="451e5562-9d18-4231-b8a6-e41ec1140a79" config-ref="clever_cloud_config" >
			<db:sql ><![CDATA[UPDATE products
SET name = :name,
    quantity = :quantity,
    category = :category,
    storage_space = :storage_space,
    expire_by = :expire_by
WHERE id = :id]]></db:sql>
			<db:input-parameters ><![CDATA[#[output application/java
---
{
	"name": payload.name,
	"quantity": payload.quantity,
	"category": payload.category,
	"storage_space": payload.storage_space,
	id: attributes.uriParams.id,
	"expire_by": payload.expire_by
}]]]></db:input-parameters>
		</db:update>
		<choice doc:name="Choice" doc:id="adb2175e-6e61-41ac-b516-b3639e686ccc" >
			<when expression="#[payload.affectedRows == 0]" >
				<raise-error doc:name="not found" doc:id="3fdbf2e8-2e86-41fb-a6f3-e22f0b401a84" type="PRODUCT:NOT_FOUND" description="Product with specified ID not found in database" />
			</when>
			<otherwise >
				<ee:transform doc:name="Transform Message" doc:id="1f0195fa-c960-4010-ab44-3642c35c1b36" >
					<ee:message >
						<ee:set-payload ><![CDATA[output application/json
---
{
	message: "Product with ID = " ++ vars.id as String ++ " updated."
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
	</flow>
	<flow name="get_by_ID_VM_listener" doc:id="14b347f9-8f8c-4e68-ba8b-49ce8811a522" >
		<vm:listener queueName="get_queue" doc:name="Listener" doc:id="37cc33fd-8971-480e-9b60-40237bf12bc9" config-ref="VM_Config" />
		<set-variable value="#[payload]" doc:name="Set Variable" doc:id="2574dd0e-a90f-45f2-9070-0b6f81fd7131" variableName="id" />
		<db:select doc:name="Select product with {id} " doc:id="8ff0951e-e6c5-44fb-b67a-58ae59234d91" config-ref="clever_cloud_config" >
			<db:sql ><![CDATA[SELECT * FROM products WHERE id = :id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	id: vars.id
}]]]></db:input-parameters>
		</db:select>
		<choice doc:name="Choice" doc:id="cd68963d-735c-474d-9579-e6af5170c719" >
			<when expression="#[isEmpty(payload)]" >
				<raise-error doc:name="not found" doc:id="87fe04e1-c532-4592-ab91-b2ef3480b68a" type="PRODUCT:NOT_FOUND" description="Product with specified ID not found in database" />
			</when>
			<otherwise >
				<ee:transform doc:name="Transform Message" doc:id="ca29c6fe-96d0-4084-a26b-3873933cb70e" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
		<aggregators:time-based-aggregator doc:name="Time based aggregator" doc:id="7fac2e6e-b725-4cb6-972c-ac5794cf100f" name="get_aggregator" period="2" />
	</flow>
	<flow name="get_AGGREGATOR_listener" doc:id="b24646d4-2540-4c0f-b171-5d4a73f2a715" >
		<aggregators:aggregator-listener doc:name="Aggregator listener" doc:id="0fccc781-ae5b-458b-beec-2aac22a16f09" aggregatorName="get_aggregator" />
		<ee:transform doc:name="return Json" doc:id="23b10dae-d93c-4656-8976-508f88223051" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json

---
{
	result_count: sizeOf(payload),
	products: payload map (prod, idx) -> prod[0]
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<vm:publish queueName="response_queue" doc:name="Publish to response queue" doc:id="70ab1707-f7e5-4308-a791-a946d1e94884" config-ref="VM_Config" />
	</flow>

</mule>
